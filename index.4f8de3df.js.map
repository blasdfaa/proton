{"mappings":"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","sources":["src/js/anchor-scroll.js","src/js/burger.js","src/js/const.js","src/js/alert-form-message.js","src/js/app.js","src/js/feedback-form.js"],"sourcesContent":["export const anchorScrollInit = () => {\r\n  const links = document.querySelectorAll('a[href^=\"#\"]');\r\n\r\n  links.forEach((anchor) => {\r\n    anchor.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n\r\n      const hash = anchor.getAttribute('href');\r\n      const target = document.querySelector(hash);\r\n\r\n      target.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n      });\r\n      history.pushState(null, null, hash);\r\n    });\r\n  });\r\n};\r\n","export const initMobileMenu = () => {\r\n  const page = document.querySelector('html');\r\n  const burgerButton = document.querySelector('.header-menu__toggle');\r\n\r\n  burgerButton.addEventListener('click', () => {\r\n    page.classList.toggle('js-menu-open');\r\n\r\n    const isMenuOpen = page.classList.contains('js-menu-open');\r\n\r\n    if (isMenuOpen) {\r\n      burgerButton.setAttribute('aria-expanded', 'true');\r\n    } else {\r\n      burgerButton.setAttribute('aria-expanded', 'false');\r\n    }\r\n  });\r\n};\r\n","export const EMAIL_VALID_REGEX =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const MAX_LENGTH_MESSAGE = 500;\r\nexport const SUCCESS_FORM_MESSAGE_TEXT = 'Ваше сообщение успешно отправлено';\r\nexport const FAILURE_FORM_MESSAGE_TEXT = 'Не удалось отправить сообщение';\r\n\r\nexport const FormMessageType = {\r\n  FAILURE: 'failure',\r\n  SUCCESS: 'success',\r\n};\r\n","export const createAlertMessage = (\r\n  message,\r\n  type = 'success',\r\n  onSuccess = Function.prototype,\r\n  onFailure = Function.prototype,\r\n) => {\r\n  const container = document.createElement('div');\r\n  const messageText = document.createElement('p');\r\n  const button = document.createElement('button');\r\n\r\n  container.classList.add('feedback-form__alert');\r\n  messageText.classList.add('feedback-form__alert-message');\r\n  button.classList.add('btn-blue', 'feedback-form__alert-button');\r\n\r\n  messageText.textContent = message;\r\n\r\n  switch (type) {\r\n    case 'success':\r\n      button.textContent = 'ОК';\r\n      button.addEventListener('click', onSuccess);\r\n      break;\r\n    case 'failure':\r\n      button.textContent = 'Попробовать еще раз';\r\n      button.addEventListener('click', onFailure);\r\n      break;\r\n  }\r\n\r\n  container.appendChild(messageText);\r\n  container.appendChild(button);\r\n\r\n  return container;\r\n};\r\n","import { anchorScrollInit } from './anchor-scroll';\r\nimport { initMobileMenu } from './burger';\r\nimport { feedbackFormInit } from './feedback-form';\r\n\r\nconst viewportWidth = window.innerWidth;\r\n\r\nif (viewportWidth < 1200) {\r\n  initMobileMenu();\r\n}\r\n\r\nanchorScrollInit();\r\nfeedbackFormInit();\r\n","import {\r\n  EMAIL_VALID_REGEX,\r\n  FAILURE_FORM_MESSAGE_TEXT,\r\n  FormMessageType,\r\n  MAX_LENGTH_MESSAGE,\r\n  SUCCESS_FORM_MESSAGE_TEXT,\r\n} from './const';\r\nimport { createAlertMessage } from './alert-form-message';\r\n\r\nexport const feedbackFormInit = () => {\r\n  const formSection = document.querySelector('.feedback-form');\r\n  const formSectionContainer = document.querySelector('.feedback-form .container');\r\n  const messageInput = document.querySelector('.feedback-form__field--message');\r\n  const emailInput = document.querySelector('.feedback-form__field--email');\r\n  const messageTextCounter = document.querySelector('.feedback-form__message-counter');\r\n  const feedbackForm = document.querySelector('.feedback-form__form');\r\n\r\n  let oldFormElements = [];\r\n\r\n  const isEmailValid = (email) => EMAIL_VALID_REGEX.test(String(email).toLowerCase());\r\n\r\n  const hideFormElements = () => {\r\n    while (formSectionContainer.firstChild) {\r\n      oldFormElements.push(formSectionContainer.firstChild);\r\n      formSectionContainer.removeChild(formSectionContainer.firstChild);\r\n    }\r\n  };\r\n\r\n  const showFormElements = () => {\r\n    formSection.querySelector('.feedback-form__alert').remove();\r\n    formSection.classList.remove('feedback-form--sent');\r\n\r\n    oldFormElements.forEach((item) => {\r\n      formSectionContainer.appendChild(item);\r\n    });\r\n\r\n    feedbackForm.reset();\r\n  };\r\n\r\n  emailInput.addEventListener('input', (e) => {\r\n    const target = e?.target?.value;\r\n\r\n    if (target && !isEmailValid(target)) {\r\n      emailInput.setCustomValidity('Введите правильный Email');\r\n    } else if (!target) {\r\n      emailInput.setCustomValidity('Поле не должно быть пустым');\r\n    } else {\r\n      emailInput.setCustomValidity('');\r\n    }\r\n\r\n    emailInput.reportValidity();\r\n  });\r\n\r\n  messageInput.addEventListener('input', (e) => {\r\n    const value = e?.target?.value;\r\n\r\n    if (value.length > MAX_LENGTH_MESSAGE) {\r\n      messageInput.setCustomValidity(`Количество символов не должно превышать ${MAX_LENGTH_MESSAGE}`);\r\n    } else if (!value) {\r\n      messageInput.setCustomValidity('Поле не должно быть пустым');\r\n    } else {\r\n      messageInput.setCustomValidity('');\r\n    }\r\n\r\n    messageTextCounter.textContent = `${+messageInput.value.length}/${MAX_LENGTH_MESSAGE}`;\r\n    messageInput.reportValidity();\r\n  });\r\n\r\n  const successMessage = createAlertMessage(\r\n    SUCCESS_FORM_MESSAGE_TEXT,\r\n    FormMessageType.SUCCESS,\r\n    () =>\r\n      showFormElements(),\r\n  );\r\n  const failureMessage = createAlertMessage(FAILURE_FORM_MESSAGE_TEXT, FormMessageType.FAILURE);\r\n\r\n  feedbackForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    hideFormElements();\r\n\r\n    formSection.classList.add('feedback-form--sent');\r\n\r\n    try {\r\n      formSectionContainer.appendChild(successMessage);\r\n    } catch (e) {\r\n      formSectionContainer.appendChild(failureMessage);\r\n    }\r\n  });\r\n};\r\n"],"names":["page","burgerButton","$2e295f0b40fdfafd$export$36297dca978b20e6","$2e295f0b40fdfafd$export$4acf637ad0d06c5a","$8928e00984b02522$export$9cc932ce80ba3c29","message","param","param1","param2","type","onSuccess","Function","prototype","onFailure","container","document","createElement","messageText","button","classList","add","textContent","addEventListener","appendChild","window","innerWidth","querySelector","toggle","contains","setAttribute","querySelectorAll","forEach","anchor","e","preventDefault","hash","getAttribute","scrollIntoView","behavior","block","history","pushState","formSection","formSectionContainer","messageInput","emailInput","messageTextCounter","feedbackForm","oldFormElements","ref","email","target","value","test","String","toLowerCase","setCustomValidity","reportValidity","length","concat","successMessage","remove","item","reset","failureMessage","firstChild","push","removeChild","hideFormElements","e1","$dbc4a8bc77fb5419$export$e530486184d838d7"],"version":3,"file":"index.4f8de3df.js.map"}